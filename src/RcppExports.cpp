// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// rcpp_parse_doc_topics
Rcpp::List rcpp_parse_doc_topics(std::string fpath, int topn, std::string ttfile, double q, const Rcpp::NumericVector doc_lens);
RcppExport SEXP _malletparseDSI_rcpp_parse_doc_topics(SEXP fpathSEXP, SEXP topnSEXP, SEXP ttfileSEXP, SEXP qSEXP, SEXP doc_lensSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type fpath(fpathSEXP);
    Rcpp::traits::input_parameter< int >::type topn(topnSEXP);
    Rcpp::traits::input_parameter< std::string >::type ttfile(ttfileSEXP);
    Rcpp::traits::input_parameter< double >::type q(qSEXP);
    Rcpp::traits::input_parameter< const Rcpp::NumericVector >::type doc_lens(doc_lensSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_parse_doc_topics(fpath, topn, ttfile, q, doc_lens));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_parse_topic_state
Rcpp::List rcpp_parse_topic_state(std::string fpath, int termflag, int docflag, int ttflag, int dtflag, std::string dtfile);
RcppExport SEXP _malletparseDSI_rcpp_parse_topic_state(SEXP fpathSEXP, SEXP termflagSEXP, SEXP docflagSEXP, SEXP ttflagSEXP, SEXP dtflagSEXP, SEXP dtfileSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type fpath(fpathSEXP);
    Rcpp::traits::input_parameter< int >::type termflag(termflagSEXP);
    Rcpp::traits::input_parameter< int >::type docflag(docflagSEXP);
    Rcpp::traits::input_parameter< int >::type ttflag(ttflagSEXP);
    Rcpp::traits::input_parameter< int >::type dtflag(dtflagSEXP);
    Rcpp::traits::input_parameter< std::string >::type dtfile(dtfileSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_parse_topic_state(fpath, termflag, docflag, ttflag, dtflag, dtfile));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_parse_topic_word_weights
Rcpp::NumericMatrix rcpp_parse_topic_word_weights(std::string fpath);
RcppExport SEXP _malletparseDSI_rcpp_parse_topic_word_weights(SEXP fpathSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type fpath(fpathSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_parse_topic_word_weights(fpath));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_parse_word_topic_counts
Rcpp::NumericMatrix rcpp_parse_word_topic_counts(std::string fpath, int ntopics);
RcppExport SEXP _malletparseDSI_rcpp_parse_word_topic_counts(SEXP fpathSEXP, SEXP ntopicsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type fpath(fpathSEXP);
    Rcpp::traits::input_parameter< int >::type ntopics(ntopicsSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_parse_word_topic_counts(fpath, ntopics));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_malletparseDSI_rcpp_parse_doc_topics", (DL_FUNC) &_malletparseDSI_rcpp_parse_doc_topics, 5},
    {"_malletparseDSI_rcpp_parse_topic_state", (DL_FUNC) &_malletparseDSI_rcpp_parse_topic_state, 6},
    {"_malletparseDSI_rcpp_parse_topic_word_weights", (DL_FUNC) &_malletparseDSI_rcpp_parse_topic_word_weights, 1},
    {"_malletparseDSI_rcpp_parse_word_topic_counts", (DL_FUNC) &_malletparseDSI_rcpp_parse_word_topic_counts, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_malletparseDSI(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
