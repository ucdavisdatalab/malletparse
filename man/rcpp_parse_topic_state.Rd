% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{rcpp_parse_topic_state}
\alias{rcpp_parse_topic_state}
\title{Rcpp Parse Topic State File --output-state}
\usage{
rcpp_parse_topic_state(fpath, termflag = 1L, docflag = 1L,
  ttflag = 1L, dtflag = 1L, dtfile = "")
}
\arguments{
\item{fpath}{A string specifying path to the output-state file.}

\item{termflag}{An integer (default = 1) set to 1 if you want to extract the terms and their frequencies.}

\item{docflag}{An integer (default = 1) set to 1 if you want to extract the document names and their token counts.}

\item{ttflag}{An integer (default = 1) set to 1 if you want to extract the topic terms matrix.}

\item{dtflag}{An integer (default = 1) set to 1 if you want to extract the document topic matrix.}

\item{dtfile}{A string (default = "") specifying path to the output file you want to write the document topics to, leave blank if you don't want to write the doc topics to a file.}
}
\value{
A list with these components:
\describe{
  \item{terms}{Character vector of the terms}
  \item{term_freqs}{Numeric vector of occurances for each term}
  \item{docs}{Character vector of the document names}
  \item{doc_lens}{Numeric vector of the number of tokens for each document}
  \item{topic_terms}{A matrix of topic terms (KxV)}
  \item{doc_topics}{A matrix of document topics (DxK)}
  \item{doc_topics_fpath}{A string with the path to the doc topics gzipped file}
}
}
\description{
Parses the file generated by Mallet with the --output-state flag.
The file is generally millions of lines long and is gzipped. 
The first three lines are meta information about the model.
Refer to the package README to see more about the file. 
This function is set up so that you can specify which information you want to extract from the state file.
If you have modeled a corpus with many millions of files, you will not be able to store the document topics matrix into memory.
In that case, set the dtflag to 0. 
To still extract the document topic matrix, set the dtfile parameter to the file you want to save the gzipped document topics matrix.
Writing it to file is done document by document and will not have any memory issues regardless of size, though may take up a lot of space on the disk.
This file contains all the information needed to run ldavis, look at the vignette for creating the json for ldavis with the information form the ifle.
}
